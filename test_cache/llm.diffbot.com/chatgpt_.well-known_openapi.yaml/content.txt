{"openapi":"3.0.2","info":{"title":"API for Diffbot's Knowledge Graph","description":"Search and find facts of organizations and people from Diffbot Knowledge Graph, and extract information from the Web using Diffbot API.","version":"0.1"},"servers":\[{"url":"https://llm.diffbot.com"}\],"paths":{"/chatgpt/v1/extract":{"get":{"tags":\["chatgpt"\],"summary":"Extract Plugin Api","description":"Extract the content from the given URLs. Only call this endpoint if the user mentioned a URL.","operationId":"extraction\_plugin\_api\_v1","parameters":\[{"description":"URLs to extract, up to 5","required":true,"schema":{"title":"Page Url","type":"array","items":{"type":"string"},"description":"URLs to extract, up to 5"},"name":"page\_url","in":"query"}\],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ExtractionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/chatgpt/v1/enhance\_person":{"get":{"tags":\["chatgpt"\],"summary":"Enhance Person Plugin Api","description":"Find person from knowledge graph with information extracted from the user query.","operationId":"enhance\_person\_api\_v1","parameters":\[{"description":"Person name.","required":true,"schema":{"title":"Name","type":"string","description":"Person name."},"name":"name","in":"query"},{"description":"Person email.","required":false,"schema":{"title":"Email","type":"string","description":"Person email."},"name":"email","in":"query"},{"description":"Name of the person's employer.","required":false,"schema":{"title":"Employer","type":"string","description":"Name of the person's employer."},"name":"employer","in":"query"},{"description":"Location of the person.","required":false,"schema":{"title":"Location","type":"string","description":"Location of the person."},"name":"location","in":"query"},{"description":"Job title of the person.","required":false,"schema":{"title":"Job Title","type":"string","description":"Job title of the person."},"name":"job\_title","in":"query"},{"description":"Phone number of the person.","required":false,"schema":{"title":"Phone","type":"string","description":"Phone number of the person."},"name":"phone","in":"query"},{"description":"A website for the person.","required":false,"schema":{"title":"Url","type":"string","description":"A website for the person."},"name":"url","in":"query"},{"description":"Name of the person's school.","required":false,"schema":{"title":"School","type":"string","description":"Name of the person's school."},"name":"school","in":"query"},{"description":"\['twitterUri', 'educations', 'nationalities', 'youtubeUri', 'children', 'id', 'wikipediaUri', 'diffbotUri', 'name', 'linkedInUri', 'parents', 'gender', 'githubUri', 'homepageUri', 'birthPlace', 'descriptors', 'facebookUri', 'employments', 'crunchbaseUri', 'location', 'instagramUri', 'age'\]\\n\\n from the list above, fill extra\_fields with the fields the query asks for.","required":false,"schema":{"title":"Extra Fields","type":"array","items":{"type":"string"},"description":"\['twitterUri', 'educations', 'nationalities', 'youtubeUri', 'children', 'id', 'wikipediaUri', 'diffbotUri', 'name', 'linkedInUri', 'parents', 'gender', 'githubUri', 'homepageUri', 'birthPlace', 'descriptors', 'facebookUri', 'employments', 'crunchbaseUri', 'location', 'instagramUri', 'age'\]\\n\\n from the list above, fill extra\_fields with the fields the query asks for."},"name":"extra\_fields","in":"query"}\],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/EnhanceResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/chatgpt/v1/enhance\_organization":{"get":{"tags":\["chatgpt"\],"summary":"Enhance Organization Plugin Api","description":"Find organization from knowledge graph with information extracted from the user query.","operationId":"enhance\_organization\_api\_v1","parameters":\[{"description":"Organization name.","required":true,"schema":{"title":"Name","type":"string","description":"Organization name."},"name":"name","in":"query"},{"description":"Homepage of the organization.","required":false,"schema":{"title":"Url","type":"string","description":"Homepage of the organization."},"name":"url","in":"query"},{"description":"Location of the organization.","required":false,"schema":{"title":"Location","type":"string","description":"Location of the organization."},"name":"location","in":"query"},{"description":"Phone number of the organization.","required":false,"schema":{"title":"Phone","type":"string","description":"Phone number of the organization."},"name":"phone","in":"query"},{"description":"Text description of the organization.","required":false,"schema":{"title":"Description","type":"string","description":"Text description of the organization."},"name":"description","in":"query"},{"description":"\['isAcquired', 'competitors', 'id', 'foundingDate', 'wikipediaUri', 'nbEmployeesMin', 'ipo', 'nbEmployeesMax', 'nbEmployees', 'isDissolved', 'homepageUri', 'investments', 'ceo', 'partnerships', 'isNonProfit', 'categories', 'customers', 'technographics', 'boardMembers', 'quarterlyRevenues', 'crunchbaseUri', 'subsidiaries', 'twitterUri', 'suppliers', 'revenue', 'yearlyRevenues', 'stock', 'diffbotUri', 'parentCompany', 'capitalization', 'name', 'totalInvestment', 'linkedInUri', 'githubUri', 'founders', 'acquiredBy', 'descriptors', 'isPublic', 'facebookUri', 'remoteScore', 'location'\]\\n\\n from the list above, fill extra\_fields with the fields the query asks for.","required":false,"schema":{"title":"Extra Fields","type":"array","items":{"type":"string"},"description":"\['isAcquired', 'competitors', 'id', 'foundingDate', 'wikipediaUri', 'nbEmployeesMin', 'ipo', 'nbEmployeesMax', 'nbEmployees', 'isDissolved', 'homepageUri', 'investments', 'ceo', 'partnerships', 'isNonProfit', 'categories', 'customers', 'technographics', 'boardMembers', 'quarterlyRevenues', 'crunchbaseUri', 'subsidiaries', 'twitterUri', 'suppliers', 'revenue', 'yearlyRevenues', 'stock', 'diffbotUri', 'parentCompany', 'capitalization', 'name', 'totalInvestment', 'linkedInUri', 'githubUri', 'founders', 'acquiredBy', 'descriptors', 'isPublic', 'facebookUri', 'remoteScore', 'location'\]\\n\\n from the list above, fill extra\_fields with the fields the query asks for."},"name":"extra\_fields","in":"query"}\],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/EnhanceResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/chatgpt/v1/text2dql":{"get":{"tags":\["chatgpt"\],"summary":"Text2Dql","description":"Called to translate natural language queries into Diffbot Query Language queries. Accept the natural language query and the types of entities the query is looking for, and construct an instruction for the next step.","operationId":"text2dql\_plugin\_api\_v1","parameters":\[{"description":"Query text from the user.","required":true,"schema":{"title":"Query","type":"string","description":"Query text from the user."},"name":"query","in":"query"},{"description":"List of entity types: Organization,Person,Article,Movie,Song,Track,Product,Event,Album,JobPost,Podcast,Investment","required":true,"schema":{"title":"Types","type":"array","items":{"type":"string"},"description":"List of entity types: Organization,Person,Article,Movie,Song,Track,Product,Event,Album,JobPost,Podcast,Investment"},"name":"types","in":"query"}\],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"title":"Response Text2Dql Plugin Api V1","type":"string"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/chatgpt/v1/dql":{"get":{"tags":\["chatgpt"\],"summary":"Dql Plugin Api","description":"Query the Diffbot Knowledge Graph for an entity or set of entities that match a set of criteria. Input includes both query and dql\_query.","operationId":"dql\_plugin\_api\_v1","parameters":\[{"description":"Query text from the user (the one passed to text2dql).","required":false,"schema":{"title":"Query","type":"string","description":"Query text from the user (the one passed to text2dql).","default":""},"name":"query","in":"query"},{"description":"Diffbot Query Language translated from the query text.","required":true,"schema":{"title":"Dql Query","type":"string","description":"Diffbot Query Language translated from the query text."},"name":"dql\_query","in":"query"}\],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/QueryResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/chatgpt/v1/execute\_js":{"get":{"tags":\["chatgpt"\],"summary":"Execute Js","description":"Execute JavaScript expression.","operationId":"execute\_js\_plugin\_api\_v1","parameters":\[{"description":"JavaScript expressions to be executed.","required":true,"schema":{"title":"Expressions","type":"string","description":"JavaScript expressions to be executed."},"name":"expressions","in":"query"}\],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/JSExecutionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":\[{"OAuth2PasswordBearer":\[\]}\]}},"/chatgpt/v1/web\_search":{"get":{"tags":\["chatgpt"\],"summary":"Web Search Plugin","description":"Search the web for information that could help answer the user's question and instructions for how to format the response.","operationId":"web\_search\_plugin\_api\_v1","parameters":\[{"description":"List of Google advanced search strings (can include phrases, booleans, site:, before:, after:, filetype:, etc)","required":true,"schema":{"title":"Text","type":"array","items":{"type":"string"},"description":"List of Google advanced search strings (can include phrases, booleans, site:, before:, after:, filetype:, etc)"},"name":"text","in":"query"},{"description":"Number of results to return (default 20)","required":false,"schema":{"title":"Num","type":"integer","description":"Number of results to return (default 20)","default":20},"name":"num","in":"query"},{"description":"Page number of results to return (default 1)","required":false,"schema":{"title":"Page","type":"integer","description":"Page number of results to return (default 1)","default":1},"name":"page","in":"query"}\],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SearchResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"EnhanceResponse":{"title":"EnhanceResponse","type":"object","properties":{"status":{"title":"Status","type":"integer","default":200},"message":{"title":"Message","type":"string"},"type":{"title":"Type","type":"string"},"entity":{"title":"Entity"},"articles":{"title":"Articles"}}},"ExtractionResponse":{"title":"ExtractionResponse","type":"object","properties":{"status":{"title":"Status","type":"integer","default":200},"message":{"title":"Message","type":"string"},"data":{"title":"Data"}}},"HTTPValidationError":{"title":"HTTPValidationError","type":"object","properties":{"detail":{"title":"Detail","type":"array","items":{"$ref":"#/components/schemas/ValidationError"}}}},"JSExecutionResponse":{"title":"JSExecutionResponse","type":"object","properties":{"status":{"title":"Status","type":"integer","default":200},"message":{"title":"Message","type":"string"},"expression":{"title":"Expression"},"data":{"title":"Data"}}},"QueryResponse":{"title":"QueryResponse","type":"object","properties":{"status":{"title":"Status","type":"integer","default":200},"message":{"title":"Message","type":"string"},"dql\_query":{"title":"Dql Query","type":"string"},"hits":{"title":"Hits","type":"integer"},"data":{"title":"Data"},"articles":{"title":"Articles"},"instruction":{"title":"Instruction","type":"string"},"page\_url":{"title":"Page Url","type":"string"}}},"SearchResponse":{"title":"SearchResponse","type":"object","properties":{"status":{"title":"Status","type":"integer","default":200},"message":{"title":"Message","type":"string"},"query":{"title":"Query","type":"array","items":{"type":"string"}},"search\_results":{"title":"Search Results"},"instructions":{"title":"Instructions","type":"string"}}},"ValidationError":{"title":"ValidationError","required":\["loc","msg","type"\],"type":"object","properties":{"loc":{"title":"Location","type":"array","items":{"anyOf":\[{"type":"string"},{"type":"integer"}\]}},"msg":{"title":"Message","type":"string"},"type":{"title":"Error Type","type":"string"}}}},"securitySchemes":{"OAuth2PasswordBearer":{"type":"oauth2","flows":{"password":{"scopes":{},"tokenUrl":"token"}}}}}}